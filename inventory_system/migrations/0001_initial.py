# Generated by Django 5.1.4 on 2024-12-21 16:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('code', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True, verbose_name='Codigo')),
                ('name', models.CharField(choices=[('Laticinios', 'Laticinios'), ('Resfriados', 'Resfriados'), ('Congelados', 'Congelados'), ('Carne in Natura', 'Carne in Natura'), ('Pescados e Frutos do Mar ', 'Pescados e Frutos do Mar'), ('Climatizado', 'Climatizado')], default='Carne in Natura', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Descrição da Categoria', verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('code', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True, verbose_name='Codigo')),
                ('sector', models.CharField(choices=[('Laticinios', 'Laticinios'), ('Resfriados', 'Resfriados'), ('Congelados', 'Congelados'), ('Bovinos', 'Bovinos'), ('Suinos', 'Suinos'), ('Climatizado', 'Climatizado'), ('Bacalhau', 'Bacalhau')], default='Resfriados', help_text='Nome do setor', max_length=100, unique=True, verbose_name='Setor')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
        ),
        migrations.CreateModel(
            name='Camaras',
            fields=[
                ('code', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True, verbose_name='Codigo')),
                ('name', models.CharField(help_text='Nome da camara fria', max_length=100, unique=True, verbose_name='Nome')),
                ('location', models.CharField(help_text='Localização da camara', max_length=100, verbose_name='Localização')),
                ('operation_status', models.CharField(choices=[('Ativa', 'Ativa'), ('Desativada', 'Desativada'), ('Em manutenção', 'Em manutenção')], default='Ativa', max_length=20, verbose_name='Status de Operação')),
                ('min_temperature', models.FloatField(help_text='Informe a temperatura minima', validators=[django.core.validators.MinValueValidator(-99.99), django.core.validators.MaxValueValidator(99.99)], verbose_name='Temperatura minima')),
                ('max_temperature', models.FloatField(help_text='Informe a temperatura maxima', validators=[django.core.validators.MinValueValidator(-99.99), django.core.validators.MaxValueValidator(99.99)], verbose_name='Temperatura maxima')),
                ('min_humidity', models.FloatField(help_text='Informe a umidade minima', validators=[django.core.validators.MinValueValidator(-99.99), django.core.validators.MaxValueValidator(99.99)], verbose_name='Umidade minima')),
                ('max_humidity', models.FloatField(help_text='Informe a umidade maxima', validators=[django.core.validators.MinValueValidator(-99.99), django.core.validators.MaxValueValidator(99.99)], verbose_name='Umidade maxima')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('description', models.TextField(help_text='Insira uma descrição detalhada do produto.', verbose_name='Descrição')),
                ('ID_Sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_system.sector')),
            ],
        ),
    ]
